数据对象在C++中有几种不同的访问方式？
C++中的访问方式有：名访问，引用（别名）访问，间址访问。

什么是表达式？表达式值的类型由什么因素决定？
表达式是由数据和运算符，按求值规则，表达一个值的式子。
表达式值的类型的决定因素为操作数的类型。
（1）如果运算符左右操作数类型相同，运算结果也是相同类型。
（2）如果运算符左右操作数类型不同，首先把类型较低（存储要求，示数能力较低）的数据转换成类型较高的数据，然后运算。
（3）赋值表达式的类型由被赋值变量的类型决定。当把一个表达式的值赋给一个变量时，系统首先强制把运算值转换成变量的类型，然后执行写操作。


函数的作用是什么？如何定义函数？什么是函数原型？
函数的两个重要作用：
（1）任务划分，把一个复杂任务划分为若干小任务，便于分工处理和验证程序正确性；
（2）软件重用，把一些功能相同或相近的程序段，独立编写成函数，让应用程序随时调用，而不需要编写雷同的代码。
函数的定义形式：	
类型  函数名 （ [ 形式参数表 ] ）
{
     语句序列
}
函数原型是函数声明，告诉编译器函数的接口信息：函数名、返回数据类型、接收的参数个数、参数类型和参数顺序，编译器根据函数原型检查函数调用的正确性。

什么是形式参数？什么是实际参数？C++函数参数有什么不同的传递方式？
参数是调用函数与被调用函数之间交换数据的通道。函数定义首部的参数称为形式参数，调用函数时使用的参数称为实际参数。C++有三种参数传递机制：值传递（值调用）；指针传递（地址调用）；引用传递（引用调用）。

4．C++函数通过什么方式传递返回值？当一个函数返回指针类型时，对返回表达式有什么要求？当返回引用类型时，是否可以返回一个算术表达式？为什么？
【解答】
C++首先计算表达式的值，然后把该值赋给函数返回类型的匿名对象，通过这个对象，把数值带回调用点，继续执行后续代码。
当函数返回指针类型时，返回的地址值所指对象不能是局部变量。因为局部变量在函数运行结束后会被销毁，返回这个指针是毫无意义的。
返回引用的对象不能是局部变量，也不能返回表达式。算术表达式的值被储存在匿名空间中，函数运行结束后会被销毁，返回这个变量的引用也是无意义的。



